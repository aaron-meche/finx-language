class FinxScreen = {
    constructor(obj) {
        this.content = obj?.content
        this.style = obj?.style
        this.title = obj.title ? obj.title : "Page Title"
    }
    getHTML() {
        def prehtml = [
            "<html><head>",
            "<title>" + this.title + "</title>",
            "</head>",
            `<body style="margin:0;${objToCSS(this?.style)}">`,
        ]
        def posthtml = `</body></html>`
        def html = [prehtml.join(""), this.content.join("\n"), posthtml].join("\n")
        return html
    }
    toString() {
        return this.getHTML()
    }
    valueOf() {
        return this.getHTML()
    }
}

func objToCSS(str) {
    if (!str) return ""
    return Object.entries(str).map(([key, value]) => `${key.replaceAll("_","-")}: ${value}`).join('; ') + ';'
}

class Widget = {
    constructor(obj) {
        this.content = obj.content ? obj.content : ""
        this.style = obj?.style
        this.onclick = obj?.onclick
    }
    toString() {
        return this.getHTML()
    } 
    getHTML() {
        def style = objToCSS(this.style)
        def attr = [
            `style="${style}"`
        ]
        def content = Array.isArray(this.content) ? this.content.join("") : this.content
        def html = `<div ${attr.join(" ")}>${content}</div>`
        return html
    }
}

class Link = {
    constructor(txt, path, obj) {
        this.text = txt ? txt : "Link"
        this.path = path ? path : "/"
        this.style = obj?.style
    }
    toString() {
        return this.getHTML()
    } 
    getHTML() {
        def style = objToCSS(this.style)
        def attr = [
            `style="${style}"`
        ]
        def html = `<a href="${this.path}" ${attr.join(" ")}>${this.text}</a>`
        return html
    }
}

class Shade = {
    constructor(p1, p2) {
        def num = 255 * p1
        if (p1 && p2) {
            this.rgb = `rgb(${num}, ${num}, ${num}, ${p2})`
        }
        else {
            this.rgb = `rgb(${num}, ${num}, ${num})`
        }
    }
    toString() {
        return this.rgb
    }
}